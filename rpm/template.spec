Name:           ros-indigo-opencv-apps
Version:        1.12.0
Release:        0%{?dist}
Summary:        ROS opencv_apps package

Group:          Development/Libraries
License:        BSD
Source0:        %{name}-%{version}.tar.gz

Requires:       ros-indigo-cv-bridge
Requires:       ros-indigo-dynamic-reconfigure
Requires:       ros-indigo-image-transport
Requires:       ros-indigo-message-runtime
Requires:       ros-indigo-nodelet
Requires:       ros-indigo-roscpp
Requires:       ros-indigo-std-msgs
Requires:       ros-indigo-std-srvs
BuildRequires:  ros-indigo-catkin
BuildRequires:  ros-indigo-compressed-image-transport
BuildRequires:  ros-indigo-cv-bridge
BuildRequires:  ros-indigo-dynamic-reconfigure
BuildRequires:  ros-indigo-image-proc
BuildRequires:  ros-indigo-image-transport
BuildRequires:  ros-indigo-image-view
BuildRequires:  ros-indigo-message-generation
BuildRequires:  ros-indigo-nodelet
BuildRequires:  ros-indigo-rosbag
BuildRequires:  ros-indigo-roscpp
BuildRequires:  ros-indigo-rosservice
BuildRequires:  ros-indigo-rostest
BuildRequires:  ros-indigo-rostopic
BuildRequires:  ros-indigo-std-msgs
BuildRequires:  ros-indigo-std-srvs
BuildRequires:  ros-indigo-topic-tools

%description
opencv_apps provides various nodes that run internally OpenCV's functionalities
and publish the result as ROS topics. With opencv_apps, you can skip writing
OpenCV application codes for a lot of its functionalities by simply running a
launch file that corresponds to OpenCV's functionality you want. You can have a
look at all launch files provided here (be sure to choose the correct branch. As
of Sept. 2016 indigo branch is used for ROS Indigo, Jade, and Kinetic distros).
Some of the features covered by opencv_apps are explained in the wiki. The most
of code is originally taken from
https://github.com/Itseez/opencv/tree/master/samples/cpp

%prep
%setup -q

%build
# In case we're installing to a non-standard location, look for a setup.sh
# in the install tree that was dropped by catkin, and source it.  It will
# set things like CMAKE_PREFIX_PATH, PKG_CONFIG_PATH, and PYTHONPATH.
if [ -f "/opt/ros/indigo/setup.sh" ]; then . "/opt/ros/indigo/setup.sh"; fi
mkdir -p obj-%{_target_platform} && cd obj-%{_target_platform}
%cmake .. \
        -UINCLUDE_INSTALL_DIR \
        -ULIB_INSTALL_DIR \
        -USYSCONF_INSTALL_DIR \
        -USHARE_INSTALL_PREFIX \
        -ULIB_SUFFIX \
        -DCMAKE_INSTALL_LIBDIR="lib" \
        -DCMAKE_INSTALL_PREFIX="/opt/ros/indigo" \
        -DCMAKE_PREFIX_PATH="/opt/ros/indigo" \
        -DSETUPTOOLS_DEB_LAYOUT=OFF \
        -DCATKIN_BUILD_BINARY_PACKAGE="1" \

make %{?_smp_mflags}

%install
# In case we're installing to a non-standard location, look for a setup.sh
# in the install tree that was dropped by catkin, and source it.  It will
# set things like CMAKE_PREFIX_PATH, PKG_CONFIG_PATH, and PYTHONPATH.
if [ -f "/opt/ros/indigo/setup.sh" ]; then . "/opt/ros/indigo/setup.sh"; fi
cd obj-%{_target_platform}
make %{?_smp_mflags} install DESTDIR=%{buildroot}

%files
/opt/ros/indigo

%changelog
* Fri Jul 14 2017 Kei Okada <kei.okada@gmail.com> - 1.12.0-0
- Autogenerated by Bloom

* Sun Mar 26 2017 Kei Okada <kei.okada@gmail.com> - 1.11.15-0
- Autogenerated by Bloom

* Mon Sep 12 2016 Kei Okada <kei.okada@gmail.com> - 1.11.14-0
- Autogenerated by Bloom

* Wed Jun 01 2016 Kei Okada <kei.okada@gmail.com> - 1.11.13-0
- Autogenerated by Bloom

